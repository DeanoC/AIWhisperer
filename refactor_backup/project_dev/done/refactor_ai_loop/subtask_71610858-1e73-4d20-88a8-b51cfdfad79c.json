{
  "description": "Implement the ContextManager class based on the design.",
  "instructions": [
    "Create a new Python file at `src/ai_whisperer/context_management.py`.",
    "Define a class named `ContextManager` within this file.",
    "Implement the methods and properties of the `ContextManager` class according to the design specifications provided in `docs/context_manager_design.md`.",
    "Pay close attention to the design details regarding message history storage, retrieval, and manipulation.",
    "Implement the logic for formatting messages for different AI service interactions as specified in the design document.",
    "Refactor the existing message history and message formatting functionality from `src/ai_whisperer/agent_handlers/code_generation.py` and move it into the `ContextManager` class.",
    "Ensure that the `CodeGenerationHandler` (and any other relevant components) are updated to use the new `ContextManager` for context handling.",
    "Run the unit tests located in `tests/unit/test_context_manager.py` and fix any failures until all tests pass.",
    "Ensure the implementation adheres to the project's coding standards and style guidelines."
  ],
  "input_artifacts": [
    "docs/context_manager_design.md",
    "tests/unit/test_context_manager.py",
    "src/ai_whisperer/agent_handlers/code_generation.py"
  ],
  "output_artifacts": [
    "src/ai_whisperer/context_management.py",
    "src/ai_whisperer/agent_handlers/code_generation.py"
  ],
  "constraints": [
    "The implementation must strictly follow the design documented in `docs/context_manager_design.md`.",
    "All message history and formatting logic must be moved out of `code_generation.py` into the `ContextManager`.",
    "The implementation must pass all provided unit tests."
  ],
  "validation_criteria": [
    "The file `src/ai_whisperer/context_management.py` exists.",
    "The file `src/ai_whisperer/context_management.py` contains a class named `ContextManager`.",
    "The `ContextManager` class implements the core functionalities described in `docs/context_manager_design.md` (e.g., adding messages, retrieving history, formatting messages).",
    "The message history and formatting logic previously in `src/ai_whisperer/agent_handlers/code_generation.py` has been removed or replaced with calls to the `ContextManager`.",
    "Running `pytest tests/unit/test_context_manager.py` results in all tests passing."
  ],
  "type": "code_generation",
  "name": "implement_context_manager",
  "depends_on": [
    "generate_context_manager_tests",
    "design_context_manager"
  ],
  "task_id": "1bc14942-c2cc-4e02-aa1a-78cfb861d8e9",
  "subtask_id": "71610858-1e73-4d20-88a8-b51cfdfad79c"
}