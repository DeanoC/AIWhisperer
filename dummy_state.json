{
    "tasks": {
        "test_task_with_instructions": {
            "status": "completed",
            "result": "Mocked AI response.",
            "context_manager": {
                "__type__": "ContextManager",
                "history": [
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    }
                ]
            }
        },
        "test_task_no_instructions": {
            "status": "completed",
            "result": "Mocked AI response.",
            "context_manager": {
                "__type__": "ContextManager",
                "history": [
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "user",
                        "content": "# AI Interaction Agent Prompt\n\nThis is a dummy prompt for the ai_interaction agent. You can customize this content as needed for your tests or production use.\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    },
                    {
                        "role": "user",
                        "content": "# Prompt for an AI LLM to Execute a Defined Subtask (Version 2)\n\n**Objective:** Act as an intelligent agent capable of executing a given subtask. You will be provided with a list of instructions (`ACTUAL INSTRUCTIONS`). Your goal is to understand this definition, perform the required actions using the available tools, and produce some output\n**Your Task:**\n\n1. **Execute Instructions:** Follow the `ACTUAL INSTRUCTIONS` step-by-step. **Carefully execute any conditional paths based on your analysis of input data or intermediate results derived during the execution of prior instructions.** To do this, you will need to utilize a specific set of tools provided to you. The primary tools you should expect to use are:\n\n    * **File Reading Tool (e.g., `read_file(filepath: str) -> str`):**\n        * Use this tool to access and read the content of files listed in `input_artifacts` or any other files mentioned in the `instructions`.\n        * Example: If `input_artifacts` contains `\"source_data.txt\"`, you would use `read_file(\"source_data.txt\")` to get its content.\n\n    * **File Writing Tool (e.g., `write_file(filepath: str, content: str) -> None`):**\n        * Use this tool to create new files or overwrite existing ones as specified in `output_artifacts` or by the `instructions`.\n        * Example: If `output_artifacts` contains `\"analysis_report.md\"` and an instruction says \"Write the summary to 'analysis_report.md'\", you would use `write_file(\"analysis_report.md\", \"Your generated summary here.\")`.\n\n    * **Web Search Tool (e.g., `search_web(query: str) -> list[search_result]`):**\n        * Some instructions might require you to find information not present in the input artifacts (e.g., \"verify the capital of country X\" or \"find current information on topic Y\").\n        * Use this tool to perform web searches when explicitly or implicitly required by the `instructions` to gather necessary information.\n        * Example: If an instruction is \"Determine the capital of France\", you might use `search_web(\"capital of France\")`.\n\n2. **Report Completion:** Upon completing the subtask, indicate whether you believe the execution was successful and all validation criteria have been met. If issues were encountered that prevented successful completion, report them clearly.\n\n**Important Considerations:**\n\n* **Tool Usage:** You *must* use the provided tools for interacting with the file system (reading/writing) and for accessing external information (web search). Do not attempt to perform these actions through other means.\n* **Accuracy:** Precision is key. Follow instructions meticulously, especially conditional logic.\n* **Self-Correction/Error Handling:** If an instruction is ambiguous or you encounter an issue (e.g., a file not found when it's expected, and it's not part of a conditional skip), note this in your process. If the subtask definition allows for it (e.g., by mentioning fallback actions), attempt to handle it. Otherwise, report the issue.\n* **Focus:** You will be given one subtask JSON at a time. Focus solely on executing that single subtask.\n\nBy following this prompt, you will act as a reliable executor for a variety of subtasks defined in this structured JSON format, leveraging the specified tools to interact with the environment and produce the desired outcomes.\n\n## ACTUAL INSTRUCTIONS\n"
                    },
                    {
                        "role": "assistant",
                        "content": "Mocked AI response."
                    }
                ]
            }
        },
        "test_task_instructions_only": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "7814f5f5-a098-49a5-a7a8-5c194b6861f9": {
            "status": "failed",
            "result": {
                "error": "Unexpected error during execution of task 7814f5f5-a098-49a5-a7a8-5c194b6861f9: handle_ai_interaction() missing 1 required positional argument: 'prompt_system'"
            }
        },
        "afed1867-ebba-4518-9ef7-8158e6aea30c": {
            "status": "failed",
            "result": {
                "status": "failed",
                "error": "An unexpected error occurred during AI interaction task afed1867-ebba-4518-9ef7-8158e6aea30c execution: 'PromptSystem' object has no attribute 'PromptNotFoundError'",
                "error_details": null
            }
        },
        "58d58bea-4f8b-4ba8-bc4f-6f9465d69896": {
            "status": "failed",
            "result": {
                "status": "failed",
                "error": "An unexpected error occurred during AI interaction task 58d58bea-4f8b-4ba8-bc4f-6f9465d69896 execution: 'PromptSystem' object has no attribute 'PromptNotFoundError'",
                "error_details": null
            }
        },
        "41302b6f-faa5-4329-a35d-f30e06038441": {
            "status": "failed",
            "result": {
                "status": "failed",
                "error": "An unexpected error occurred during AI interaction task 41302b6f-faa5-4329-a35d-f30e06038441 execution: 'PromptSystem' object has no attribute 'PromptNotFoundError'",
                "error_details": null
            }
        },
        "fc1a5cbc-d679-4027-891d-a45a76eafdfa": {
            "status": "failed",
            "result": {
                "status": "failed",
                "error": "An unexpected error occurred during AI interaction task fc1a5cbc-d679-4027-891d-a45a76eafdfa execution: Prompt not found for agent type 'ai_interaction' for task fc1a5cbc-d679-4027-891d-a45a76eafdfa: Prompt 'agents.ai_interaction' not found in project or codebase prompts.",
                "error_details": null
            }
        },
        "3de1bbbe-5d63-449f-ae35-5674e3671081": {
            "status": "failed",
            "result": {
                "error": "Unexpected error during execution of task 3de1bbbe-5d63-449f-ae35-5674e3671081: Failed to save state to dummy_state.json: Object of type MagicMock is not JSON serializable"
            }
        },
        "82933332-20fa-406c-b5b5-b5cbf9be2917": {
            "status": "completed",
            "result": {
                "ai_response": "<Unserializable: MagicMock>",
                "tool_outputs": {}
            }
        },
        "24af75f5-3d90-4292-81a3-81d2967161c5": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "57647e22-ded9-4e1a-abb9-85b0ec55b5c9": {
            "status": "failed",
            "result": {
                "status": "failed",
                "error": "An unexpected error occurred during AI interaction task 57647e22-ded9-4e1a-abb9-85b0ec55b5c9 execution: Prompt not found for agent type 'ai_interaction' for task 57647e22-ded9-4e1a-abb9-85b0ec55b5c9: Prompt 'agents.ai_interaction' not found in project or codebase prompts.",
                "error_details": null
            }
        },
        "8ee3b423-1030-44e8-871d-51c43e2288dc": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "a6566bc2-6021-440c-8965-873ab915009e": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "f6af34b0-63bf-4d7a-9329-09563ea6a30d": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "90aa0fe7-3940-4ce6-9bc9-c748fed30215": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "2cee3d2a-7dd4-40cd-b233-a569d52e9c9c": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "0df30be3-c399-45c1-a766-3a031a21058b": {
            "status": "completed",
            "result": "Mocked AI response."
        },
        "e95fb372-ca7d-45cf-9c8a-c3934d7b35ee": {
            "status": "completed",
            "result": "Mocked AI response."
        }
    },
    "global_state": {},
    "plan_id": "dummy_task_id_ai_interaction_only"
}