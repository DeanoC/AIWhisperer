{
  "description": "Run tests to validate the enhanced model listing and CSV output.",
  "depends_on": [],
  "agent_spec": {
    "type": "validation",
    "input_artifacts": [
      "src/ai_whisperer/main.py",
      "src/ai_whisperer/openrouter_api.py",
      "tests/unit/test_openrouter_model_listing.py",
      "tests/integration/test_openrouter_model_listing_cli.py"
    ],
    "output_artifacts": [],
    "instructions": [
      "Execute the unit tests located in `tests/unit/test_openrouter_model_listing.py` using pytest.",
      "Execute the integration tests located in `tests/integration/test_openrouter_model_listing_cli.py` using pytest.",
      "Confirm that all tests specifically related to the model listing enhancement and the new CSV output functionality pass successfully.",
      "Manually run the AIWhisperer command `ai-whisperer --list-models --config config.yaml` (or a suitable test config file) from the terminal and visually inspect the console output to ensure that model names are printed correctly and that no CSV file is generated.",
      "Manually run the AIWhisperer command `ai-whisperer --list-models --config config.yaml --output-csv models.csv` (or a suitable test config file) from the terminal.",
      "Verify that a file named `models.csv` is created in the current directory.",
      "Open and inspect the generated `models.csv` file to confirm it contains detailed model information, including appropriate headers and data columns as expected for the enhanced listing."
    ],
    "constraints": [
      "Ensure pytest is installed and available in the environment.",
      "Use a valid `config.yaml` or test configuration file for manual testing that allows access to OpenRouter models."
    ],
    "validation_criteria": [
      "All tests within `tests/unit/test_openrouter_model_listing.py` execute without errors and pass.",
      "All tests within `tests/integration/test_openrouter_model_listing_cli.py` execute without errors and pass.",
      "Executing `ai-whisperer --list-models --config config.yaml` results in model names being printed to the standard output.",
      "Executing `ai-whisperer --list-models --config config.yaml --output-csv models.csv` successfully creates a file named `models.csv`.",
      "The content of the generated `models.csv` file is correctly formatted CSV data with headers and detailed model information."
    ]
  },
  "step_id": "validate_model_listing_enhancement",
  "task_id": "1b82deca-8c11-4330-aa30-01a2ff98799f"
}