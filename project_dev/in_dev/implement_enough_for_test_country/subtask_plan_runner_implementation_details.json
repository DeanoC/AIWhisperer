{
  "description": "Detail the implementation steps required to add the missing runner functionality identified in the analysis.",
  "depends_on": [],
  "agent_spec": {
    "type": "planning",
    "input_artifacts": [
      "./project_dev/in_dev/implement_enough_for_test_country/analysis_summary.md"
    ],
    "output_artifacts": [
      "./project_dev/in_dev/implement_enough_for_test_country/implementation_plan.md"
    ],
    "instructions": [
      "Analyze the content of `./project_dev/in_dev/implement_enough_for_test_country/analysis_summary.md` to understand the identified missing runner functionality.",
      "Based on the analysis, create a detailed step-by-step implementation plan to add this functionality.",
      "Break down the overall implementation into smaller, actionable subtasks.",
      "For each subtask, define the specific code modifications required in existing files (e.g., `src/ai_whisperer/execution_engine.py`, `src/ai_whisperer/main.py`).",
      "Identify any new files that might be necessary to implement the required functionality.",
      "Clearly define how the runner will ingest and process the plan steps, including handling different `agent_spec.type` values (e.g., 'planning', 'coding', 'testing').",
      "Specify how the runner will extract and pass `instructions`, `constraints`, `input_artifacts`, and `validation_criteria` from the plan steps to the appropriate agent logic.",
      "Outline the integration points with the AI service interaction module (`src/ai_whisperer/ai_service_interaction.py`) for steps requiring AI communication.",
      "Include a specific section in the plan detailing the steps required to add an expensive integration test.",
      "This integration test should use a real AI connection to validate the end-to-end runner functionality for a simple plan, such as the `simple_country_test` plan located in `tests/simple_run_test_country`.",
      "Ensure the plan addresses how the runner will handle the inputs and outputs defined in the plan steps, including saving output artifacts.",
      "Document the entire implementation plan clearly and concisely in the file `./project_dev/in_dev/implement_enough_for_test_country/implementation_plan.md`."
    ],
    "constraints": [
      "The implementation plan must be based solely on the findings in `analysis_summary.md`.",
      "The plan must focus on implementing the minimum functionality required to make the `simple_country_test` pass.",
      "The plan must be outputted as a Markdown file named `implementation_plan.md` in the specified directory."
    ],
    "validation_criteria": [
      "The file `./project_dev/in_dev/implement_enough_for_test_country/implementation_plan.md` exists.",
      "The `implementation_plan.md` file contains a detailed, step-by-step approach for implementing the runner functionality.",
      "The plan clearly identifies which existing files will be modified and suggests any necessary new files.",
      "The plan outlines how the runner will process plan steps and interact with agents.",
      "The plan includes a specific section detailing the creation of an expensive integration test using a real AI connection.",
      "The plan describes how the integration test will validate the runner using the `simple_country_test` plan."
    ]
  },
  "step_id": "plan_runner_implementation_details",
  "task_id": "0fa8c553-09fb-45fc-8384-6780cd3c8a02",
  "subtask_id": "97df3fb3-e8d8-4eb2-ae7a-fcc301d917b8"
}