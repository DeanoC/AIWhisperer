{
  "natural_language_goal": "Implement JSON plan ingestion and parsing in the runner.",
  "overall_context": "This feature allows the runner to read, parse, and validate AI-generated JSON plans to automate task execution.",
  "plan": [
    {
      "step_id": "plan_json_ingestion_parsing",
      "file_path": "project_dev/in_dev/plan-ingestion-and-parsing/subtask_plan_json_ingestion_parsing.json",
      "depends_on": [],
      "type": "planning",
      "input_artifacts": [
        "project_dev/rfc/runner/plan-ingestion-and-parsing.md",
        "src/ai_whisperer/schemas/task_schema.json",
        "src/ai_whisperer/schemas/subtask_schema.json"
      ],
      "output_artifacts": [
        "project_dev/in_dev/plan-ingestion-and-parsing/plan_ingestion_parsing_design.md"
      ],
      "completed": false
    },
    {
      "step_id": "generate_tests_plan_ingestion_parsing",
      "file_path": "project_dev/in_dev/plan-ingestion-and-parsing/subtask_generate_tests_plan_ingestion_parsing.json",
      "depends_on": [
        "plan_json_ingestion_parsing"
      ],
      "type": "test_generation",
      "input_artifacts": [
        "project_dev/in_dev/plan-ingestion-and-parsing/plan_ingestion_parsing_design.md",
        "src/ai_whisperer/schemas/task_schema.json",
        "src/ai_whisperer/schemas/subtask_schema.json"
      ],
      "output_artifacts": [
        "tests/unit/test_plan_ingestion.py",
        "tests/integration/test_runner_plan_ingestion.py"
      ],
      "completed": false
    },
    {
      "step_id": "implement_plan_ingestion_parsing",
      "file_path": "project_dev/in_dev/plan-ingestion-and-parsing/subtask_implement_plan_ingestion_parsing.json",
      "depends_on": [
        "generate_tests_plan_ingestion_parsing"
      ],
      "type": "code_generation",
      "input_artifacts": [
        "project_dev/in_dev/plan-ingestion-and-parsing/plan_ingestion_parsing_design.md",
        "tests/unit/test_plan_ingestion.py",
        "tests/integration/test_runner_plan_ingestion.py",
        "src/ai_whisperer/schemas/task_schema.json",
        "src/ai_whisperer/schemas/subtask_schema.json",
        "src/ai_whisperer/json_validator.py"
      ],
      "output_artifacts": [
        "src/ai_whisperer/plan_parser.py"
      ],
      "completed": false
    },
    {
      "step_id": "validate_plan_ingestion_parsing",
      "file_path": "project_dev/in_dev/plan-ingestion-and-parsing/subtask_validate_plan_ingestion_parsing.json",
      "depends_on": [
        "implement_plan_ingestion_parsing"
      ],
      "type": "validation",
      "input_artifacts": [
        "src/ai_whisperer/plan_parser.py",
        "tests/unit/test_plan_ingestion.py",
        "tests/integration/test_runner_plan_ingestion.py"
      ],
      "output_artifacts": [],
      "completed": false
    },
    {
      "step_id": "update_documentation",
      "file_path": "project_dev/in_dev/plan-ingestion-and-parsing/subtask_update_documentation.json",
      "depends_on": [
        "validate_plan_ingestion_parsing"
      ],
      "type": "documentation",
      "input_artifacts": [
        "project_dev/rfc/runner/plan-ingestion-and-parsing.md",
        "project_dev/in_dev/plan-ingestion-and-parsing/plan_ingestion_parsing_design.md",
        "src/ai_whisperer/plan_parser.py",
        "docs/index.md",
        "docs/usage.md",
        "docs/internal_process.md",
        "src/ai_whisperer/schemas/task_schema.json",
        "src/ai_whisperer/schemas/subtask_schema.json"
      ],
      "output_artifacts": [
        "docs/usage.md",
        "docs/internal_process.md"
      ],
      "completed": false
    }
  ],
  "task_id": "1e967a9a-79e9-4568-8957-5a69c0713a86",
  "input_hashes": {
    "requirements_md": "4ad2696500ed971b819cb97428c31792fbcc20656ec7aa8907ec16a980c6ce31",
    "config_json": "bae825f58be819daf9f14ac791db2453c083be17875e8c8452a9e9a57fd7de3e",
    "prompt_file": "hash_not_available"
  }
}