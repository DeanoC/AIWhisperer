{
  "description": "Integrate the command parser and command handlers into the terminal monitor loop.",
  "instructions": [
    "Locate the main terminal monitor loop within `src/ai_whisperer/monitoring.py`.",
    "Within the loop, identify or create a section dedicated to handling user input for commands.",
    "Configure the terminal display to show a clear prompt (e.g., `> `) in the bottom center window where the user can type commands.",
    "Capture the user's input from this designated command input area.",
    "Pass the captured input string to the command parsing logic implemented in `src/ai_whisperer/terminal_monitor/command_parser.py`.",
    "Receive the parsed command and its arguments from the parser.",
    "Use the parsed command to look up and call the corresponding command handler function defined in `src/ai_whisperer/terminal_monitor/commands.py`.",
    "Implement logic to specifically handle the 'exit', 'quit', and 'q' commands. When these commands are received, break out of the terminal monitor loop to terminate the monitoring process.",
    "Ensure that the terminal monitor's other display areas (for logs, state, etc.) continue to update and function correctly while the system is waiting for command input.",
    "Add necessary error handling for invalid commands or parsing errors, displaying appropriate messages to the user in the terminal monitor."
  ],
  "input_artifacts": [
    "src/ai_whisperer/terminal_monitor/command_parser.py",
    "src/ai_whisperer/terminal_monitor/commands.py",
    "src/ai_whisperer/monitoring.py"
  ],
  "output_artifacts": [
    "src/ai_whisperer/monitoring.py"
  ],
  "constraints": [
    "The command input area must be clearly distinguishable from other monitor output.",
    "The monitor should remain responsive and continue displaying other information while waiting for command input.",
    "The integration must use the existing `command_parser.py` and `commands.py` modules."
  ],
  "validation_criteria": [
    "When the terminal monitor is running, a command prompt (e.g., `> `) is visible in the designated input area.",
    "Typing 'exit' at the prompt and pressing Enter successfully terminates the terminal monitor.",
    "Typing 'quit' at the prompt and pressing Enter successfully terminates the terminal monitor.",
    "Typing 'q' at the prompt and pressing Enter successfully terminates the terminal monitor.",
    "Typing 'debugger' at the prompt and pressing Enter executes the debugger command handler (verify by observing logs or expected internal state changes, even if manual debugger attachment is required).",
    "Typing 'ask <some prompt text>' at the prompt and pressing Enter executes the 'ask' command handler (verify by observing logs or expected internal state changes indicating AI interaction initiation).",
    "Typing an unknown command at the prompt results in an error message being displayed in the terminal monitor.",
    "Other monitor display areas continue to update while waiting for or processing commands."
  ],
  "type": "file_edit",
  "name": "implement_command_mode_integration",
  "depends_on": [
    "validate_basic_features",
    "validate_initial_commands_implementation"
  ],
  "task_id": "8765da11-b5e1-4946-99d7-7b6cadf9fcfc",
  "subtask_id": "fa677844-67f3-4666-a22a-b76678163582"
}