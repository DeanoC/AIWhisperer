{
  "description": "Analyze the current implementation of prompt loading to understand its structure, dependencies, and limitations.",
  "instructions": [
    "Review the files `src/ai_whisperer/config.py`, `src/ai_whisperer/ai_service_interaction.py`, and `src/ai_whisperer/subtask_generator.py` to understand how prompts are currently loaded, accessed, and used within the application.",
    "Identify and document the current prompt structure, noting how default prompts are defined and how they might be overridden (if at all).",
    "Analyze the dependencies related to prompt loading. Where is the prompt data stored? How is it read?",
    "Evaluate the current implementation against the new requirements: centralized access, unified structure, lazy loading, section defaults/fallbacks, user overrides via config, and application defaults. Specifically, identify which of these requirements are *not* met by the current implementation.",
    "Document the findings in `docs/prompt_loading_analysis.md`. Structure the document with sections covering: Current Implementation Overview, Prompt Structure and Overrides, Dependencies, and Analysis Against New Requirements (highlighting areas for refactoring)."
  ],
  "input_artifacts": [
    "src/ai_whisperer/config.py",
    "src/ai_whisperer/ai_service_interaction.py",
    "src/ai_whisperer/subtask_generator.py"
  ],
  "output_artifacts": [
    "docs/prompt_loading_analysis.md"
  ],
  "constraints": [
    "The analysis must be based *only* on the provided input files and the stated new requirements.",
    "The output must be a markdown file named `docs/prompt_loading_analysis.md`."
  ],
  "validation_criteria": [
    "The file `docs/prompt_loading_analysis.md` exists.",
    "The analysis document accurately describes the current prompt loading process based on the provided input files.",
    "The document clearly identifies the current prompt structure and how defaults/overrides are handled.",
    "The document highlights specific areas in the current code that require refactoring to meet the new requirements (centralized access, unified structure, lazy loading, section defaults/fallbacks, user overrides via config, app defaults)."
  ],
  "type": "analysis",
  "name": "analyze_current_prompt_loading",
  "depends_on": [],
  "task_id": "3b2255a4-04a0-439a-a4da-4f2d8cec22b2",
  "subtask_id": "5cd3c0b3-ad03-40ed-9f8c-b2bf5c5a3c03"
}