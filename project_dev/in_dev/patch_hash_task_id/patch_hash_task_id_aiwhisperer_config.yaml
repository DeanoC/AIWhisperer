natural_language_goal: Add a postprocessing step to insert items into AI output text
  and remove specific guidance from default prompts for orchestrator and subtask generator,
  following a Test-first Driven Design methodology.
overall_context: 'The task requires modifying the existing postprocessing system and
  prompt files.

  A strict Test-first Driven Design approach must be followed for any code changes.

  Fixed items like hashes, task_id, and subtask_id are internal tracking mechanisms
  and should not be explicitly handled by the AI agents generating code or text.

  '
plan:
- step_id: analyze_requirements
  description: Analyze the requirements to determine the necessary code changes for
    the postprocessing step and identify the specific lines to remove from the prompt
    files.
  depends_on: []
  agent_spec:
    type: planning
    input_artifacts:
    - src/postprocessing/modulename_placeholder.py
    - prompts/orchestrator_default_prompt.md
    - prompts/subtask_generator_default_prompt.md
    output_artifacts:
    - docs/analysis_summary.md
    instructions: 'Read and understand the user requirements.

      Identify the location within the src/postprocessing system where a new step
      can be added to modify the final text output. Determine what information this
      step will need to add.

      Locate the default prompt files for the orchestrator and subtask generator in
      the prompts directory.

      Identify the specific sentences or paragraphs within these prompt files that
      instruct the AI to use or maintain fixed items like hashes, task_id, and subtask_id.

      Create a summary document outlining:

      - The proposed location and high-level design for the new postprocessing step.

      - The exact text to be removed from each prompt file.

      - A plan for implementing the new postprocessing step and removing the prompt
      text, adhering to TDD.

      '
    validation_criteria:
    - docs/analysis_summary.md exists.
    - docs/analysis_summary.md clearly identifies the location for the new postprocessing
      step.
    - docs/analysis_summary.md clearly identifies the specific text to be removed
      from each prompt file.
    - docs/analysis_summary.md outlines a high-level implementation plan following
      TDD principles.
- step_id: generate_postprocessing_tests
  description: Generate unit tests for the new postprocessing step before implementing
    the code. These tests should verify the step's ability to correctly add items
    to text output.
  depends_on:
  - analyze_requirements
  agent_spec:
    type: test_generation
    input_artifacts:
    - docs/analysis_summary.md
    - src/postprocessing/modulename_placeholder.py
    output_artifacts:
    - tests/unit/test_postprocessing_new_step.py
    instructions: 'Based on the analysis summary and the structure of the postprocessing
      system, write unit tests for the planned new postprocessing step.

      The tests should cover various scenarios for adding items to the text output,
      including different data types and placement within the text.

      Do NOT write any implementation code for the postprocessing step itself. Focus
      solely on the tests.

      Ensure the tests are written to fail before the actual implementation code is
      added.

      Examine existing test files in the tests/unit directory for examples of test
      structure and naming conventions.

      '
    constraints:
    - Do not write any production code for the postprocessing step.
    validation_criteria:
    - tests/unit/test_postprocessing_new_step.py exists.
    - tests/unit/test_postprocessing_new_step.py contains test cases covering different
      scenarios for adding items to text.
    - Tests in tests/unit/test_postprocessing_new_step.py are designed to fail before
      implementation.
- step_id: implement_postprocessing_step
  description: Implement the new postprocessing step to add items into the resulting
    text from AI calls, ensuring it passes the generated tests.
  depends_on:
  - generate_postprocessing_tests
  agent_spec:
    type: code_generation
    input_artifacts:
    - docs/analysis_summary.md
    - tests/unit/test_postprocessing_new_step.py
    - src/postprocessing/modulename_placeholder.py
    output_artifacts:
    - src/postprocessing/modulename_placeholder.py
    instructions: 'Implement the new postprocessing step within the src/postprocessing
      system as outlined in the analysis summary.

      The step should be able to receive data and insert it into the processed text
      output from AI calls.

      Write only the minimum code necessary to make the tests in tests/unit/test_postprocessing_new_step.py
      pass.

      Do NOT implement special-case logic solely to pass the tests; the code must
      correctly implement the required functionality.

      Examine existing code in src/postprocessing for structure and integration points.

      Look for reusable functions or patterns within the existing codebase, including
      utility modules if applicable, before writing new code.

      '
    constraints:
    - The implementation must make the tests in tests/unit/test_postprocessing_new_step.py
      pass.
    - Do not add functionality not specified in the requirements or analysis summary.
    validation_criteria:
    - The new postprocessing step code is added to the specified location.
    - The code implements the logic to add items to the text output.
- step_id: validate_postprocessing_step
  description: Run the unit tests for the new postprocessing step to verify its correct
    implementation.
  depends_on:
  - implement_postprocessing_step
  agent_spec:
    type: validation
    input_artifacts:
    - tests/unit/test_postprocessing_new_step.py
    - src/postprocessing/modulename_placeholder.py
    instructions: 'Execute the unit tests located in tests/unit/test_postprocessing_new_step.py.

      Use the appropriate test runner command (e.g., pytest).

      Report the test results.

      '
    validation_criteria:
    - The test execution command runs successfully.
    - All tests in tests/unit/test_postprocessing_new_step.py pass.
- step_id: edit_orchestrator_prompt
  description: Remove the specific rules regarding fixed items from the orchestrator
    default prompt file.
  depends_on:
  - analyze_requirements
  agent_spec:
    type: file_edit
    input_artifacts:
    - prompts/orchestrator_default_prompt.md
    - docs/analysis_summary.md
    output_artifacts:
    - prompts/orchestrator_default_prompt.md
    instructions: 'Open the file prompts/orchestrator_default_prompt.md.

      Locate and remove the exact text identified in the analysis summary that instructs
      the AI to use or maintain fixed items like hashes, task_id, and subtask_id.

      Ensure that only the specified text is removed and no other part of the prompt
      is altered.

      '
    validation_criteria:
    - prompts/orchestrator_default_prompt.md is modified.
    - The specific text identified in the analysis summary is removed from prompts/orchestrator_default_prompt.md.
    - No other significant changes are present in prompts/orchestrator_default_prompt.md.
- step_id: edit_subtask_generator_prompt
  description: Remove the specific rules regarding fixed items from the subtask generator
    default prompt file.
  depends_on:
  - analyze_requirements
  agent_spec:
    type: file_edit
    input_artifacts:
    - prompts/subtask_generator_default_prompt.md
    - docs/analysis_summary.md
    output_artifacts:
    - prompts/subtask_generator_default_prompt.md
    instructions: 'Open the file prompts/subtask_generator_default_prompt.md.

      Locate and remove the exact text identified in the analysis summary that instructs
      the AI to use or maintain fixed items like hashes, task_id, and subtask_id.

      Ensure that only the specified text is removed and no other part of the prompt
      is altered.

      '
    validation_criteria:
    - prompts/subtask_generator_default_prompt.md is modified.
    - The specific text identified in the analysis summary is removed from prompts/subtask_generator_default_prompt.md.
    - No other significant changes are present in prompts/subtask_generator_default_prompt.md.
task_id: 006431f0-d82e-4f68-8d64-10911ecc7d5d
input_hashes:
  requirements_md: 66eeb8f471043e656bf01ffe1c33008614ca389dc3c6011b698cc03d206f38f3
  config_yaml: 0693ebb1f5c1c73a09dbac55f1ebfa392b331f4c81cbedaf1ee3f45633b9ae77
  prompt_file: 9e9a5fb5e3011f1446b1e2dc175b249c27a9d7bdbfead44812ed3d0be915d77b
