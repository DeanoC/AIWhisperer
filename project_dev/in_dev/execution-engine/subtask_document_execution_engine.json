{
  "description": "Add documentation for the implemented Execution Engine.",
  "depends_on": [],
  "agent_spec": {
    "type": "documentation",
    "input_artifacts": [
      "project_dev/in_dev/execution-engine/execution_engine_design.md",
      "src/ai_whisperer/execution_engine.py"
    ],
    "output_artifacts": [
      "docs/execution_engine.md"
    ],
    "instructions": [
      "Create or update the file at `docs/execution_engine.md`.",
      "Based on the design document `project_dev/in_dev/execution-engine/execution_engine_design.md` and the source code `src/ai_whisperer/execution_engine.py`, write comprehensive documentation for the Execution Engine.",
      "Start by clearly stating the purpose of the Execution Engine within the AIWhisperer project.",
      "Describe the core functionality of the Execution Engine, explaining how it takes a plan (likely a sequence of subtasks) and processes it.",
      "Detail how the Execution Engine manages the state of individual tasks and the overall plan execution.",
      "Explain the current execution model, explicitly stating that it supports sequential execution only.",
      "Clearly document any other known limitations, such as the lack of support for conditional logic, parallel execution, or complex task dependencies beyond simple sequencing.",
      "Include basic usage examples or conceptual workflows to illustrate how the Execution Engine is intended to be used or how it operates internally.",
      "Ensure the documentation is clear, concise, and easy to understand for developers contributing to the project."
    ],
    "constraints": [
      "Documentation must be in Markdown format.",
      "Focus solely on the Execution Engine's functionality as implemented.",
      "Do not speculate on future features or planned enhancements."
    ],
    "validation_criteria": [
      "The file `docs/execution_engine.md` is created or updated.",
      "The documentation accurately reflects the implemented features of the Execution Engine based on the provided input artifacts.",
      "The purpose and core functionality are clearly explained.",
      "Task state management is documented.",
      "The sequential execution model is explicitly mentioned.",
      "Current limitations (e.g., sequential only, no conditional logic) are clearly documented.",
      "Basic usage examples or conceptual workflows are included.",
      "The documentation is well-formatted and readable Markdown."
    ]
  },
  "step_id": "document_execution_engine",
  "task_id": "6dda1297-bb9c-433a-bcbc-093dafd62925",
  "subtask_id": "e2eaccad-6bb9-485e-a61e-916c253fc960"
}