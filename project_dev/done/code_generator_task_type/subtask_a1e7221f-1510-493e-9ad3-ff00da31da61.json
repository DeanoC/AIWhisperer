{
  "description": "Update documentation to reflect the new `code_generation` task type and its handler.",
  "instructions": [
    "Open `docs/execution_engine.md` and add a new section or update the existing relevant section to describe the `code_generation` task type. Explain its purpose within the execution engine's workflow.",
    "Detail how the `code_generation` handler processes tasks, including how it interacts with AI services to generate code based on the subtask definition.",
    "Open `docs/usage.md` and add a new section or update the relevant section to guide users on how to define and use `code_generation` tasks in their plan files.",
    "Provide examples of a `code_generation` task definition, referencing the structure defined in `src/ai_whisperer/schemas/subtask_schema.json`.",
    "Explain how the `code_generation` task handles generated code, including how it can be used to create new files or modify existing ones.",
    "Describe how tests related to the generated code can be specified and potentially executed within the context of a `code_generation` task.",
    "Review `docs/code_generation_handler_research.md` and `docs/code_generation_handler_design.md` and extract any relevant information, such as design decisions, limitations, or advanced usage patterns, to be incorporated into the user-facing documentation (`docs/execution_engine.md` and `docs/usage.md`). Ensure the information is presented clearly and concisely for the target audience.",
    "Ensure consistency in terminology and formatting with the rest of the documentation."
  ],
  "input_artifacts": [
    "docs/code_generation_handler_research.md",
    "docs/code_generation_handler_design.md",
    "docs/execution_engine.md",
    "docs/usage.md",
    "src/ai_whisperer/schemas/subtask_schema.json"
  ],
  "output_artifacts": [
    "docs/execution_engine.md",
    "docs/usage.md"
  ],
  "constraints": [
    "Documentation must be clear, accurate, and user-friendly.",
    "Changes should reflect the implemented functionality of the `code_generation` task type and handler.",
    "Avoid introducing broken links or formatting issues."
  ],
  "validation_criteria": [
    "The `code_generation` task type and its handling by the execution engine are clearly and accurately described in `docs/execution_engine.md`.",
    "`docs/usage.md` contains comprehensive instructions and examples on how to define and utilize `code_generation` tasks in user plans.",
    "The documentation correctly references the structure defined in `src/ai_whisperer/schemas/subtask_schema.json` for the `code_generation` task type.",
    "Details on how tests and file modifications are handled within the `code_generation` task are included in the documentation.",
    "Information from `docs/code_generation_handler_research.md` and `docs/code_generation_handler_design.md` that is relevant to users or developers is appropriately integrated into the updated documentation.",
    "The updated documentation is free of broken links and formatting errors."
  ],
  "type": "documentation",
  "name": "update_documentation",
  "depends_on": [
    "validate_integration"
  ],
  "task_id": "28b11d1a-aeb6-4c57-8c3d-a85d3dbba0db",
  "subtask_id": "a1e7221f-1510-493e-9ad3-ff00da31da61"
}