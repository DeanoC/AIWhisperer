{
  "description": "Implement the detail level storage, setter, getter, and conditional display logic in ANSIConsoleUserMessageHandler.",
  "instructions": [
    "Open the file `ai_whisperer/ansi_console_user_message_handler.py`.",
    "Inside the `ANSIConsoleUserMessageHandler` class, add a new private member variable (e.g., `_detail_level`) to store the current detail level. Initialize it to a default value (e.g., 0).",
    "Implement a public method (e.g., `set_detail_level`) that takes an integer argument and updates the `_detail_level` member variable.",
    "Implement a public method (e.g., `get_detail_level`) that returns the current value of the `_detail_level` member variable.",
    "Locate the `display_message` method within the `ANSIConsoleUserMessageHandler` class.",
    "Modify the `display_message` method to compare the `message.level` with the stored `_detail_level`.",
    "Add a conditional check: only print the message to the console if `message.level` is less than or equal to `_detail_level`.",
    "Save the changes to `ai_whisperer/ansi_console_user_message_handler.py`."
  ],
  "input_artifacts": [
    "ai_whisperer/ansi_console_user_message_handler.py",
    "tests/unit/test_ansi_console_message_handler.py"
  ],
  "output_artifacts": [
    "ai_whisperer/ansi_console_user_message_handler.py"
  ],
  "constraints": [
    "Implementation should be entirely within the ANSIConsoleUserMessageHandler class, except for the CLI option parsing.",
    "The detail level should be an integer.",
    "The comparison in `display_message` should be `message.level <= self._detail_level`."
  ],
  "validation_criteria": [
    "The `ANSIConsoleUserMessageHandler` class in `ai_whisperer/ansi_console_user_message_handler.py` has a member variable named `_detail_level`.",
    "The `ANSIConsoleUserMessageHandler` class has a method `set_detail_level` that accepts an integer.",
    "The `ANSIConsoleUserMessageHandler` class has a method `get_detail_level` that returns an integer.",
    "The `display_message` method in `ANSIConsoleUserMessageHandler` contains logic to conditionally display the message based on `message.level` and `_detail_level`.",
    "Running the tests in `tests/unit/test_ansi_console_message_handler.py` (which were added in the previous step) should now pass, verifying the conditional display logic."
  ],
  "type": "file_edit",
  "name": "implement_handler_detail_level",
  "depends_on": [
    "generate_handler_tests"
  ],
  "task_id": "9d132fd3-4632-40c3-8331-dae207ba694b",
  "subtask_id": "e2bc9adb-76e6-438d-ae82-b5a4b9c69aa0"
}