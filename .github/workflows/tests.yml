name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        # Stop on syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Warning on style issues
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

  unit-tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    - name: Run unit tests
      run: |
        # Run only unit tests and integration tests that don't need external services
        pytest -m "unit and not (network or requires_api or slow)" -v --cov=ai_whisperer --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only on push, not PR
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
    - name: Run integration tests (no API)
      run: |
        # Run integration tests that don't require API keys
        pytest -m "integration and not (requires_api or slow or ai_regression)" -v

  # Manual trigger for full test suite including API tests
  full-tests:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: testing  # Requires approval and has secrets
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-timeout
    - name: Run full test suite
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: |
        # Run all tests including slow and API tests
        pytest -v --timeout=300
